entityOperator:
  topicOperator: {}
  userOperator: {}
kafka:
  config:
    auto.create.topics.enable: false
    log.message.format.version: "2.8"
    offsets.topic.replication.factor: 3
    transaction.state.log.min.isr: 2
    transaction.state.log.replication.factor: 3
  listeners:
    - name: plain
      port: 9092
      type: internal
      tls: false
    - name: tls
      port: 9093
      type: internal
      tls: true
    # plain: {}
    # tls: {}
  replicas: 3
  storage:
    deleteClaim: false
    size: 10Gi
    type: persistent-claim
  version: 3.9.0
  # JMX configuration with SSL
  jmxOptions:
    authentication:
      type: password
  jvmOptions:
    "-Xmx": "2G"
    "-Xms": "2G"
    "-Dcom.sun.management.jmxremote": "true"
    "-Dcom.sun.management.jmxremote.port": "9999"
    "-Dcom.sun.management.jmxremote.rmi.port": "9999"
    "-Dcom.sun.management.jmxremote.ssl": "true"
    "-Dcom.sun.management.jmxremote.registry.ssl": "true"
    "-Dcom.sun.management.jmxremote.ssl.need.client.auth": "true"
    "-Djavax.net.ssl.keyStore": "/opt/kafka/certificates/jmx-keystore.jks"
    "-Djavax.net.ssl.keyStorePassword": "${JMX_KEYSTORE_PASSWORD}"
    "-Djavax.net.ssl.trustStore": "/opt/kafka/certificates/jmx-truststore.jks"
    "-Djavax.net.ssl.trustStorePassword": "${JMX_TRUSTSTORE_PASSWORD}"
  # Metrics configuration for Prometheus JMX Exporter
  metricsConfig:
    type: jmxPrometheusExporter
    valueFrom:
      configMapKeyRef:
        name: kafka-metrics
        key: kafka-metrics-config.yml
strimzi-kafka-operator:
  watchAnyNamespace: true
zookeeper:
  replicas: 3
  storage:
    deleteClaim: false
    size: 10Gi
    type: persistent-claim
  # JMX configuration with SSL for Zookeeper
  jmxOptions:
    authentication:
      type: password
  jvmOptions:
    "-Xmx": "1G"
    "-Xms": "1G"
    "-Dcom.sun.management.jmxremote": "true"
    "-Dcom.sun.management.jmxremote.port": "9998"
    "-Dcom.sun.management.jmxremote.rmi.port": "9998"
    "-Dcom.sun.management.jmxremote.ssl": "true"
    "-Dcom.sun.management.jmxremote.registry.ssl": "true"
    "-Dcom.sun.management.jmxremote.ssl.need.client.auth": "true"
    "-Djavax.net.ssl.keyStore": "/opt/kafka/certificates/jmx-keystore.jks"
    "-Djavax.net.ssl.keyStorePassword": "${JMX_KEYSTORE_PASSWORD}"
    "-Djavax.net.ssl.trustStore": "/opt/kafka/certificates/jmx-truststore.jks"
    "-Djavax.net.ssl.trustStorePassword": "${JMX_TRUSTSTORE_PASSWORD}"

# JMX SSL Certificates
# Generate these using scripts/generate-jmx-certificates.sh
jmxCertificates:
  # Base64 encoded keystore file
  keystore: ""
  # Base64 encoded truststore file  
  truststore: ""

# JMX Passwords
jmxPasswords:
  keystorePassword: ""
  truststorePassword: ""
