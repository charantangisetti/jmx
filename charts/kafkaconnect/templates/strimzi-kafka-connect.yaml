apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: {{ include "kafkaconnect.fullname" . }}
  annotations:
    strimzi.io/use-connector-resources: "true"
  labels:
    {{- include "kafkaconnect.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{ if .Values.kafkaBootstrapServer -}}
  bootstrapServers: {{ .Values.kafkaBootstrapServer }}
  {{- else -}}
  bootstrapServers: {{ .Release.Name }}-kafkacluster-kafka-bootstrap:9093
  {{- end }}
  image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
  config:
    value.converter: "org.apache.kafka.connect.storage.StringConverter"
    key.converter: "org.apache.kafka.connect.storage.StringConverter"
  resources:
    {{- toYaml .Values.resources | nindent 4 }}
  logging:
    type: inline
    loggers:
      connect.root.logger: "INFO"
  readinessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 5
  livenessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 5
  # JMX DISABLED - Security vulnerability mitigation
  # Explicitly ensuring JMX is not enabled to prevent port 9999 exposure
  # jmxOptions:
  #   authentication:
  #     type: password
  jvmOptions:
    "-Xmx": "4g"
    "-Xms": "4g"
    # Explicitly disable JMX remote management for security
    "-Dcom.sun.management.jmxremote": "false"
    "-Dcom.sun.management.jmxremote.authenticate": "false"
    "-Dcom.sun.management.jmxremote.ssl": "false"
  template:
    pod:
     {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
     {{- end }}
  tls:
    trustedCertificates:
      - secretName: {{ .Release.Name }}-kafkacluster-cluster-ca-cert
        certificate: ca.crt
